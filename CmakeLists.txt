cmake_minimum_required(VERSION 3.5)

project(MindLens LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets LinguistTools)

include_directories(
    ${CMAKE_SOURCE_DIR}/include
    ${CMAKE_SOURCE_DIR}/include/controller
    ${CMAKE_SOURCE_DIR}/include/model
    ${CMAKE_SOURCE_DIR}/include/view
    ${CMAKE_BINARY_DIR}
    ${CMAKE_SOURCE_DIR}/src/ui
)

set(PROJECT_SOURCES
    src/view/main.cpp
    src/view/mainwindow.cpp
    src/model/imagemodel.cpp
    src/controller/maincontroller.cpp
)

set(PROJECT_HEADERS
    include/view/mainwindow.h
    include/model/imagemodel.h
    include/controller/maincontroller.h
)

set(PROJECT_FORMS
    ${CMAKE_SOURCE_DIR}/src/view/mainwindow.ui
)

set(PROJECT_TRANSLATIONS
    ${CMAKE_SOURCE_DIR}/translations/MindLens_zh_CN.ts
)

set(PROJECT_RESOURCES
    ${CMAKE_SOURCE_DIR}/resources
)

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(MindLens
        ${PROJECT_SOURCES}
        ${PROJECT_HEADERS}
        ${PROJECT_FORMS}
    )
else()
    if(CMAKE_VERSION VERSION_LESS "3.7.0")
        set(CMAKE_INCLUDE_CURRENT_DIR ON)
    endif()

    add_executable(MindLens
        ${PROJECT_SOURCES}
        ${PROJECT_HEADERS}
        ${PROJECT_FORMS}
    )
endif()

target_link_libraries(MindLens PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)

qt_add_translations(MindLens TS_FILES ${PROJECT_TRANSLATIONS})

file(COPY ${PROJECT_RESOURCES} DESTINATION ${CMAKE_BINARY_DIR})
